class LangMoodel:   # all languages in our system
    UA = 'ua'
    EN = 'en'
    RU = 'ru'

class Text(LangMoodel):
    def __init__(self):
        super().__init__()

    @staticmethod
    def choose_language(self):    # choosing new language
        text = 'Hello!\n Please, choose your language:'
        return text

    def menu(self, lang):   # function for a main menu
        if lang == self.UA:
            return "–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é: "
        elif lang == self.EN:
            return "Choose the option"
        elif lang == self.RU:
            return "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:"

    def for_new_user(self, lang):   # short instruction for new user
        if lang == self.UA:
            return "–î–ª—è —Ç–æ–≥–æ —â–æ–± –ø–æ—á–∞—Ç–∏ –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ—Ö–æ–≤—É–≤–∞–Ω—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º–∏, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É '–î–æ–¥–∞—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è' —ñ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è."
        elif lang == self.EN:
            return "To start tracking the number of link conversions, click 'Add Link' button and send in the tracking link."
        elif lang == self.RU:
            return "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Ö–æ–≤–æ–≤ –ø–æ —Å—Å—ã–ª–∫–∞–º, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É' –∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è."

    def for_old_user(self, lang):   # notification of the user about his language
        if lang == self.UA:
            return "–¢–µ–ø–µ—Ä –≤–∞—à–∞ –º–æ–≤–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞."
        elif lang == self.EN:
            return "Now your language is English."
        elif lang == self.RU:
            return "–¢–µ–ø–µ—Ä—å –≤–∞—à —è–∑—ã–∫ —Ä—É—Å—Å–∫–∏–π."

    def awaiting_the_link(self, lang):   # message in state awaiting link
        if lang == self.UA:
            return "–ù–∞–¥—ñ—à–ª—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–µ—Ä–µ—Ö–æ–¥—ñ–≤."
        elif lang == self.EN:
            return "Send me a link to track the amount of conversions."
        elif lang == self.RU:
            return "–ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–∞ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤."

    def incorrect_link(self, lang):
        if lang == self.UA:
            return "–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑. –ü–æ—Å–∏–ª–∞–Ω–Ω—è –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ 'https'."
        elif lang == self.EN:
            return "Incorrect link, try again. The link must contain 'https'."
        elif lang == self.RU:
            return "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å 'https'."

    def instruction_for_report(self, lang):  # funtion with help user with reporting
        if lang == self.UA:
            return "–ù–∏–∂—á–µüëá –Ω–∞–ø–∏—à—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤.\n –ù–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –π–æ–≥–æ –ø—Ä–æ—á–∏—Ç–∞—é—Ç—å, –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º –≤—ñ–¥ –±–æ—Ç–∞"
        elif lang == self.EN:
            return "Belowüëá write a message to the developers.\n It will be read soon, you will get a reply you will receive a message from the bot."
        elif lang == self.RU:
            return "–ù–∏–∂–µüëá –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.\n –í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –µ–≥–æ –ø—Ä–æ—á—Ç—É—Ç, –æ—Ç–≤–µ—Ç –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ—Ç –±–æ—Ç–∞"

    def answer_on_report(self, lang):
        if lang == self.UA:
            return "–î—è–∫—É—î–º–æ –∑–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è, –¥—É–∂–µ —Å–∫–æ—Ä–æ –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—å"
        elif lang == self.EN:
            return "Thank you for contacting us, you will receive an answer very soon."
        elif lang == self.RU:
            return "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ, –æ—á–µ–Ω—å —Å–∫–æ—Ä–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –æ—Ç–≤–µ—Ç"

    def after_canselling(self, lang):
        if lang == self.UA:
            return "–î–æ–±—Ä–µ, –≤–∏ –±—É–¥–µ—Ç–µ –ø–æ–≤–µ—Ä–Ω—É—Ç—ñ —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"
        elif lang == self.EN:
            return "Ok, you will be returned to main menu"
        elif lang == self.RU:
            return "–•–æ—Ä–æ—à–æ, –≤—ã –±—É–¥–µ—Ç–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"